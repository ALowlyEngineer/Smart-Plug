import sys,os
import time
from scipy.interpolate import interp1d  
import numpy as np
import matplotlib.pyplot as plt
from scipy import integrate

from matplotlib.backends.backend_qt4agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt4agg import NavigationToolbar2QT as NavigationToolbar
from matplotlib.figure import Figure

import random
import serial

start= time.time()
conn = sqlite3.connect(':memory:')
c = conn.cursor()
c.execute("""CREATE TABLE plugData(current real, voltage real, time real)""")
c.execute("SELECT * FROM pedaling WHERE time != 0") #for degugging prints all from database
#print(c.fetchall())
conn.commit()

ser = serial.Serial('/dev/ttyS0')  # open serial port
ser.baudrate = 9600
#print(ser.name)         # check which port was really used

def update_data(self): 

        #ser.write("rose") for testing
        ser.flush()
        self.input = ser.read(9) // Returns 9 bytes read as a bytes variable
        self.volt_value = (self.input[1] << 8) + (self.input[2]) #change this to match the byte design you made
        self.curr_value = (self.input[3] << 8) + (self.input[4])
        self.time_value = (self.input[5] << 24) + (self.input[6] << 16) +\
                          (self.input[7] << 8) + self.input[8]
        self.curr_float = float(self.curr_value/1000)
        self.volt_float = float(self.volt_value/1000)
        self.time_float = float(self.time_value/1000)
        
        #self.power_float = self.volt_float * self.curr_float
        #self.power_float = round(self.power_float,3)
        
        #self.volt_read.setText(self.volt_value + " V")  for formating the variable later on
        #self.curr_read.setText(self.curr_value + " A")        
        #self.power_read.setText(str(self.power_float)+ " W")
        
        #Writing to the Database example
    
        point= time.time() - start
        c.execute("""INSERT INTO plugData (current, voltage, time)  VALUES(?,?)""", (self.power_float, point))
        conn.commit()
        
        c.execute("SELECT * FROM plugData)
        records =c.fetchall()
        
        self.cur = []
        for column in records:
            self.cur.append(column[0])
       
       self.volt = []
       for column in records
            self.volt.append(column[1])

        self.tme = []
        for column in records:
            self.tme.append(column[2])
      

       
     
        outList = [x06, self.relay] 
        outBound = bytes(outList)
        ser.write[outBound]
